<?php

/**
 * Implements hook_menu()
 */
function responsive_image_mapping_menu() {
  $items= array();
  $items['admin/config/media/image-styles/responsive-mappings'] = array(
    'title' => 'Responsive Image Mappings',
    'description' => 'Select responsive image styles and where they map.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('responsive_image_mapping_admin_form'),
    'access arguments' => array('administer responsive image mappings'),
    'type' => MENU_LOCAL_ACTION,
    'weight' => 3,
    'file' => 'includes/responsive_image_mapping.admin.inc',
  );
  return $items;
}

/**
  * Implements hook_permission
  */
function responsive_image_mapping_permission() {
  return array(
    'administer responsive image mappings' => array(
      'title' => t('Choose Responsive Image Style Mappings'),
      'description' => t('Choose which image styles are responsive and where they map.'),
    ),
  );
}

/**
 * Implements hook_preprocess_image_style()
 */
function responsive_image_mapping_preprocess_image_style(&$variables) {
  $result = db_select('responsive_img_mapping', 'r')
    ->fields('r', array('mappings'))
    ->condition('preset_key', $variables['style_name'], '=')
    ->execute()
    ->fetchAssoc();
  if (!empty($result)) {
    $tinyGIF = variable_get('rim_small_Img_default', FALSE);
    $mappings = unserialize($result['mappings']);
    $mappings_count = array_unshift($mappings, $variables['style_name']);
    // Test breakpoints
    $breakpoints = array('mapping-0' => 400, 'mapping-1' => 800);
    $variables['attributes']['class'][] = 'responsive_image_mapping';
    for ($i = 0; $i < $mappings_count; $i++) {
      while (empty($mappings[$i])) {
        $mappings[$i] = $mappings[$i - 1];
      }
      if ($tinyGIF) {

      }
      $variables['attributes']['data-responsive_image_mapping_' . $i] = image_style_url($mappings[$i], $variables['path']);
    }
    drupal_add_js(array('responsive_image_mapping' => array('mappings' => $breakpoints)), 'setting');
  }
}

/**
  * Implements hook_theme_registry_alter
  */
function responsive_image_mapping_registry_alter(&$theme_registry) {

}

/**
  * Custom Image Style theme
  */
function responsive_image_mapping_image_styles(&$vars) {
}

/**
 * Implements hook_image_default_styles()
 */
function responsive_image_mapping_image_default_styles() {
}
